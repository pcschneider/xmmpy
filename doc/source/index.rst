 .. xmmpy documentation master file, created by
   sphinx-quickstart on Thu Dec  8 16:33:39 2022.
   You can adapt this file completely to your liking, but it should at least
   contain the root `toctree` directive.

Welcome to xmmpy's documentation!
=================================

Usage
=====

There are two example, the first downloads the data from the archive (typically used 
for non-propriatory data) and the second example starts with an odf downloaded
from the archive, i.e., an 01234567.tar.gz file.

Example 1 (download from archive)
---------------------------------------

(*heainit* and *sasinit* must have been run in the specific terminal.)

Download, process and generate source products for one specific source::

  xmm_full_process.sh obsID sourcename [directory, default=.]


This command runs, in series, the scripts generated by the following sequence::

  xmm_retrieve.py obsID directory
  xmm_source_regions.py directory/obsID sourcename
  xmm_source_products.py directory/obsID sourcename
  
  

Example 2 (starting from 01234567.tar.gz)
-----------------------------------------

(Perhaps, run *heainit* and *sasinit* in the specific terminal in advance.)

Assuming that you have downloaded an odf (e.g. 01234567.tar.gz), you can run::

  heainit ; sasinit
  xmm_process2products.sh 01234567.tar.gz "GJ436" XMM/
  
with the target name being ``GJ435`` and the directory being ``XMM``. The obsID in the above example would be '01234567' with the data being stored in
``XMM/01234567``.
  
Results
--------
  
The data are then to be found in following directories:

  - Eventfiles and images: ``directory/{obsID}/odata``
  - Spectra: ``directory/{obsID}/specs``
  - Light curves: ``directory/{obsID}/lcs``
  
and the log-file will be (in the future)::

    directory/{obsID}/xmmpy_main.log


    
**Run without generating an extra shell script**    

Simply do::
  
  eval "$(command)"

where ``command`` is either ``xmm_retrieve.py`` or ``xmm_source_products`` with its arguments.
    
  
Step-by-step Example
---------------------

Setup paths::

  export xmmpy=/home/majestix/hdd/tools/xmmpy
  export PATH=$PATH:${xmmpy}/bin
  export PYTHONPATH=$PYTHONPATH:/home/majestix/hdd/tools

Generate regions::

  xmm_source_regions.py 0892000501/ 'TOI-776' --script='source_regs.sh'
  . source_regs.sh

Check regions::

    xmm_ds9_for_images.py 0892000501/ 'TOI-776'

Correction region format (because ds9 cannot save regions to fits-files)::

    xmm_correct_region_file_format.py 0892000501/  
    #(if only one config file in directory, else provide config-file directly)

Generate source products::

  xmm_source_products.py 0892000501/ 'TOI-776'

or for a specific config-file::

  xmm_source_products.py --config=0892000501/toi_776.config 'TOI-776'
  
  
High level scripts
===================
.. toctree::
   :maxdepth: 2
   
   hl_description


Some Helper Functions
=====================
.. toctree::
   :maxdepth: 2

   etc 

Further information
===================

.. toctree::
   :maxdepth: 2

   installation
   internal_doc
   next_steps
   

Indices and tables
==================

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`
